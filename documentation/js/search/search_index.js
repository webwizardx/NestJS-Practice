var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.259,1,2.226]],["body/controllers/AppController.html",[0,1.964,1,3.474,2,1.548,3,0.354,4,0.312,5,0.312,6,3.483,7,0.539,8,1.707,9,6.055,10,1.548,11,0.027,12,4.131,13,0.879,14,4.131,15,1.345,16,1.707,17,0.449,18,0.697,19,2.882,20,2.738,21,2.483,22,0.354,23,0.05,24,1.17,25,4.131,26,4.131,27,0.021,28,0.021]],["title/modules/AppModule.html",[29,1.173,30,2.226]],["body/modules/AppModule.html",[1,2.901,2,1.373,3,0.211,4,0.186,5,0.186,11,0.027,17,0.54,18,0.415,22,0.211,23,0.03,27,0.015,28,0.015,29,1.279,30,4.243,31,1.067,32,1.854,33,2.075,34,2.075,35,2.075,36,3.268,37,3.268,38,3.268,39,3.268,40,2.989,41,3.268,42,2.203,43,1.479,44,1.479,45,2.461,46,2.428,47,2.203,48,1.821,49,1.353,50,2.461,51,2.461,52,2.075,53,2.461,54,2.461,55,2.461,56,2.428,57,2.461,58,2.075,59,2.461,60,3.588,61,1.631,62,3.663,63,1.821,64,2.711,65,1.821,66,2.203,67,2.461,68,2.461,69,2.461,70,2.461,71,2.461,72,2.461,73,2.047,74,2.461,75,2.461,76,2.075,77,2.461,78,2.461,79,2.461,80,2.075,81,2.461,82,2.461]],["title/injectables/AppService.html",[41,2.019,83,0.663]],["body/injectables/AppService.html",[3,0.413,4,0.364,5,0.364,11,0.026,17,0.413,18,0.813,22,0.413,23,0.058,27,0.023,28,0.023,41,3.464,83,1.137,84,1.94,85,4.062]],["title/controllers/AuthController.html",[0,1.259,86,2.226]],["body/controllers/AuthController.html",[0,1.233,2,1.233,3,0.282,4,0.248,5,0.248,7,0.429,8,1.468,10,1.233,11,0.027,13,0.7,15,1.071,17,0.526,18,0.555,19,2.48,20,2.18,21,1.978,22,0.282,23,0.04,24,0.932,27,0.018,28,0.018,58,2.774,86,2.989,87,2.774,88,2.434,89,3.289,90,2.83,91,3.802,92,3.289,93,3.328,94,3.289,95,3.289,96,1.149,97,1.149,98,0.555,99,0.932,100,4.339,101,1.978,102,2.434,103,3.289,104,2.774,105,2.604,106,2.434,107,2.18,108,3.289,109,3.289,110,2.774,111,3.337,112,3.289,113,2.774,114,3.289,115,3.289,116,1.978,117,2.434,118,3.289,119,3.289,120,3.289,121,3.289]],["title/modules/AuthModule.html",[29,1.173,36,2.019]],["body/modules/AuthModule.html",[2,1.501,3,0.238,4,0.21,5,0.21,11,0.027,17,0.53,18,0.469,22,0.238,23,0.033,27,0.016,28,0.016,29,1.398,31,1.204,32,2.026,36,3.842,40,3.12,42,2.407,43,1.67,44,1.67,46,2.654,47,2.407,52,2.342,60,3.802,61,1.841,65,2.056,76,2.342,80,2.342,86,3.112,105,3.205,106,2.056,122,2.342,123,2.778,124,2.342,125,2.342,126,3.411,127,3.411,128,2.778,129,3.376,130,2.778,131,4.004,132,1.528,133,2.778,134,2.056,135,2.778,136,2.778,137,1.67,138,2.778,139,2.778,140,2.342,141,2.778,142,2.778,143,2.778]],["title/injectables/AuthService.html",[83,0.663,105,1.7]],["body/injectables/AuthService.html",[3,0.225,4,0.198,5,0.198,7,0.342,8,1.25,11,0.027,13,0.966,15,1.25,16,1.811,17,0.456,18,0.443,22,0.225,23,0.032,24,1.286,27,0.015,28,0.015,83,0.758,84,1.056,90,2.498,91,3.237,96,1.586,97,1.586,98,0.767,99,1.286,101,1.576,105,1.943,134,1.94,144,2.211,145,3.839,146,1.943,147,2.211,148,2.6,149,5.745,150,2.622,151,3.839,152,2.208,153,2.622,154,3.839,155,3.839,156,3.314,157,2.622,158,2.308,159,1.94,160,2.211,161,1.576,162,2.211,163,2.308,164,2.124,165,2.308,166,2.622,167,2.622,168,2.622,169,1.94,170,1.94,171,1.94,172,1.94,173,1.327,174,1.94,175,1.94,176,1.94,177,3.839,178,2.622,179,2.211,180,2.622,181,2.622,182,2.211,183,2.622]],["title/classes/CreateTodoDto.html",[23,0.04,184,1.847]],["body/classes/CreateTodoDto.html",[3,0.344,4,0.303,5,0.303,7,0.523,10,1.928,11,0.026,13,1.095,16,1.95,17,0.344,22,0.344,23,0.062,27,0.02,28,0.02,98,0.869,99,1.457,184,2.829,185,1.876,186,4.789,187,2.969,188,2.072,189,3.764,190,4.789,191,5.222,192,4.012,193,4.012,194,2.412]],["title/classes/CreateUserDto.html",[23,0.04,195,1.847]],["body/classes/CreateUserDto.html",[3,0.345,4,0.304,5,0.304,7,0.526,10,1.934,11,0.026,13,1.098,16,1.954,17,0.345,22,0.345,23,0.062,27,0.02,28,0.02,98,0.871,156,3.773,158,3.422,185,1.885,188,2.078,194,2.424,195,2.838,196,4.799,197,2.983,198,5.692,199,4.031,200,5.692,201,4.031]],["title/classes/EnvironmentVariables.html",[23,0.04,137,2.019]],["body/classes/EnvironmentVariables.html",[3,0.21,4,0.185,5,0.185,7,0.32,10,2.166,11,0.027,13,1.23,16,1.958,17,0.313,22,0.21,23,0.053,24,0.695,27,0.014,28,0.014,64,1.815,73,1.147,98,0.976,137,2.198,164,1.709,185,1.147,188,1.472,191,5.145,194,1.475,202,1.626,203,4.369,204,4.369,205,4.369,206,4.369,207,4.369,208,4.369,209,4.369,210,4.369,211,2.453,212,2.453,213,2.453,214,2.453,215,2.099,216,5.178,217,2.453,218,2.453,219,3.684,220,3.655,221,2.453,222,2.453,223,2.453,224,2.069,225,2.453,226,2.453,227,2.453,228,2.705,229,2.705,230,3.082,231,3.082,232,2.705,233,2.069,234,2.069,235,2.069,236,3.655,237,2.453,238,2.453,239,2.069,240,2.453,241,2.453,242,1.815,243,2.453,244,1.626,245,1.626,246,1.241,247,2.453]],["title/controllers/HealthController.html",[0,1.259,248,2.226]],["body/controllers/HealthController.html",[0,1.833,2,1.391,3,0.318,4,0.28,5,0.28,7,0.484,8,1.592,10,1.391,11,0.027,13,0.789,15,1.208,17,0.469,18,0.626,19,2.689,21,2.231,22,0.318,23,0.045,24,1.051,27,0.019,28,0.019,146,1.878,163,2.94,248,3.241,249,3.129,250,5.814,251,3.711,252,3.711,253,4.89,254,4.89,255,4.89,256,4.89,257,2.746,258,2.746,259,3.711,260,4.89,261,3.129,262,3.711,263,3.711,264,3.711]],["title/modules/HealthModule.html",[29,1.173,37,2.019]],["body/modules/HealthModule.html",[2,2.041,3,0.376,4,0.331,5,0.331,11,0.027,17,0.507,18,0.741,22,0.376,23,0.053,27,0.022,28,0.022,29,1.902,31,1.903,37,3.274,47,2.639,248,3.923,257,3.248,265,4.39,266,5.445,267,4.39]],["title/injectables/JwtAuthGuard.html",[56,2.226,83,0.663]],["body/injectables/JwtAuthGuard.html",[3,0.287,4,0.253,5,0.253,7,0.438,8,1.488,11,0.027,13,0.972,15,1.092,17,0.478,18,0.566,20,2.224,21,2.017,22,0.287,23,0.04,24,1.294,27,0.018,28,0.018,56,3.029,63,2.483,73,1.569,83,0.902,84,1.351,96,1.596,97,1.596,98,0.772,99,1.294,116,2.017,132,1.845,146,1.698,164,1.569,268,4.383,269,2.483,270,3.854,271,3.355,272,6.026,273,3.355,274,3.854,275,3.7,276,3.355,277,2.224,278,2.829,279,2.483,280,1.454,281,3.355,282,2.483,283,3.854,284,3.355,285,3.355,286,3.355,287,2.829]],["title/injectables/JwtStrategy.html",[83,0.663,126,2.019]],["body/injectables/JwtStrategy.html",[3,0.273,4,0.241,5,0.241,7,0.416,8,1.437,11,0.027,13,0.939,15,1.039,17,0.508,18,0.538,22,0.273,23,0.038,24,0.903,27,0.017,28,0.017,60,4.502,61,2.114,65,2.36,66,2.654,83,0.871,84,1.285,90,2.784,96,1.542,97,1.542,98,0.745,99,1.25,101,1.918,126,2.654,132,1.754,137,1.918,140,2.689,146,2.234,147,2.689,148,2.775,162,2.689,163,1.918,165,1.918,179,2.689,242,2.36,280,1.382,282,2.36,288,2.689,289,3.189,290,4.415,291,3.189,292,3.189,293,2.689,294,2.36,295,2.689,296,2.689,297,2.689,298,3.189,299,3.189,300,3.189,301,3.189,302,3.189]],["title/injectables/LocalAuthGuard.html",[83,0.663,107,2.226]],["body/injectables/LocalAuthGuard.html",[3,0.344,4,0.303,5,0.303,7,0.523,8,1.675,11,0.027,13,0.854,15,1.306,17,0.441,18,0.677,22,0.344,23,0.048,24,1.136,27,0.02,28,0.02,83,1.016,84,1.616,96,1.401,97,1.401,98,0.677,99,1.136,107,3.41,132,2.206,269,2.969,270,4.338,274,4.338,275,3.97,277,2.659,278,3.383,280,1.739,287,3.383,303,4.338,304,4.012,305,4.012]],["title/injectables/LocalStrategy.html",[83,0.663,127,2.019]],["body/injectables/LocalStrategy.html",[3,0.276,4,0.243,5,0.243,7,0.421,8,1.449,11,0.027,13,0.947,15,1.05,16,1.939,17,0.47,18,0.545,22,0.276,23,0.039,24,0.914,27,0.018,28,0.018,66,2.675,83,0.878,84,1.299,90,2.801,96,1.554,97,1.554,98,0.751,99,1.26,105,3.013,106,2.387,116,1.94,127,2.675,132,1.774,146,1.632,152,1.909,156,3.639,158,1.94,164,1.509,165,1.94,245,2.138,246,1.632,280,1.398,282,2.387,293,2.72,294,2.387,296,2.72,297,2.72,306,2.72,307,3.226,308,3.226,309,4.45,310,3.226,311,3.226,312,4.45,313,2.72,314,4.45,315,3.226,316,3.226]],["title/interfaces/Request.html",[93,2.019,317,1.847]],["body/interfaces/Request.html",[3,0.382,4,0.336,5,0.336,7,0.582,11,0.026,17,0.382,22,0.382,27,0.022,28,0.022,93,3.306,98,0.753,152,2.497,161,2.681,188,2.214,280,1.933,317,2.453,318,3.3,319,3.76,320,4.46]],["title/interfaces/Response.html",[317,1.847,321,2.226]],["body/interfaces/Response.html",[3,0.252,4,0.222,5,0.222,7,0.384,11,0.027,16,1.579,17,0.415,18,0.497,22,0.358,23,0.035,24,0.834,27,0.017,28,0.017,83,0.824,98,0.891,164,2.267,169,2.178,170,2.178,171,3.588,172,2.178,173,1.489,174,2.178,175,2.178,176,2.178,188,1.681,215,2.102,246,1.489,275,2.766,277,1.951,317,1.619,318,2.178,321,2.766,322,2.178,323,2.178,324,4.696,325,5.285,326,4.877,327,5.016,328,4.088,329,3.519,330,3.519,331,2.482,332,3.519,333,2.178,334,2.482,335,2.482,336,1.951,337,2.482,338,2.482,339,2.482,340,2.482,341,2.482,342,2.509,343,2.482,344,2.482]],["title/injectables/ResponseTransformInterceptor.html",[83,0.663,336,2.226]],["body/injectables/ResponseTransformInterceptor.html",[3,0.259,4,0.228,5,0.228,7,0.394,8,1.383,11,0.027,13,0.642,15,0.983,16,0.983,17,0.421,18,0.509,22,0.364,23,0.036,24,0.855,27,0.017,28,0.017,83,0.838,84,1.215,96,1.054,97,1.054,98,0.509,99,0.855,164,2.298,169,2.233,170,2.233,171,4.16,172,2.233,173,1.527,174,2.233,175,2.233,176,2.233,215,1.308,246,1.527,275,3.535,277,2.815,317,1.659,321,2,322,3.143,323,2.233,324,3.581,325,4.74,326,4.144,327,4.498,328,2.544,329,3.581,330,4.498,331,2.544,332,4.144,333,2.233,334,2.544,335,2.544,336,2.815,337,2.544,338,4.144,339,2.544,340,2.544,341,2.544,342,2.553,343,2.544,344,2.544,345,3.017,346,3.017]],["title/modules/SharedModule.html",[29,1.173,38,2.019]],["body/modules/SharedModule.html",[3,0.413,4,0.364,5,0.364,11,0.026,17,0.413,18,0.813,22,0.413,23,0.058,27,0.023,28,0.023,29,2.012,31,2.088,38,3.464,347,4.818]],["title/classes/Todo.html",[23,0.04,348,1.847]],["body/classes/Todo.html",[3,0.241,4,0.212,5,0.212,7,0.367,10,2.052,11,0.027,13,1.165,16,1.683,17,0.346,22,0.241,23,0.034,27,0.016,28,0.016,73,2.417,98,1.033,99,1.145,152,2.252,161,1.693,173,1.425,185,1.316,188,1.628,189,3.135,190,3.988,215,1.752,242,3.825,280,1.752,348,2.223,349,2.374,350,3.988,351,3.988,352,3.988,353,3.988,354,3.825,355,5.17,356,2.815,357,3.409,358,4.043,359,2.815,360,2.815,361,2.815,362,2.815,363,2.815,364,2.815,365,4.043,366,4.616,367,2.374,368,4.043,369,2.991,370,2.083,371,2.374,372,2.374,373,3.409,374,2.815,375,2.374]],["title/controllers/TodosController.html",[0,1.259,376,2.226]],["body/controllers/TodosController.html",[0,0.813,2,0.813,3,0.186,4,0.164,5,0.164,7,0.283,8,1.084,10,1.839,11,0.027,13,1.044,15,1.597,17,0.42,18,0.366,22,0.186,23,0.026,24,1.389,27,0.013,28,0.013,88,1.604,93,3.767,96,1.713,97,1.713,98,0.828,99,1.389,100,5.07,102,2.999,104,1.828,116,1.304,117,1.604,184,3.06,215,2.473,376,2.207,377,1.828,378,1.828,379,1.831,380,2.207,381,2.464,382,2.207,383,2.686,384,2.168,385,2.168,386,2.168,387,2.168,388,2.168,389,3.615,390,2.807,391,2.168,392,2.168,393,2.807,394,2.168,395,2.168,396,3.345,397,2.807,398,2.168,399,3.417,400,1.828,401,1.828,402,1.828,403,3.834,404,2.229,405,1.828,406,1.437,407,2.464,408,1.437,409,2.168,410,2.168,411,2.168,412,2.168,413,2.168,414,2.168,415,3.417,416,2.168,417,2.168,418,2.168,419,2.168]],["title/modules/TodosModule.html",[29,1.173,39,2.019]],["body/modules/TodosModule.html",[2,1.828,3,0.317,4,0.279,5,0.279,11,0.027,17,0.531,18,0.624,22,0.317,23,0.044,27,0.019,28,0.019,29,1.703,31,1.601,32,2.467,39,3.726,42,2.931,43,2.221,44,2.221,46,3.232,47,2.221,48,2.734,49,2.032,152,1.828,161,2.221,348,2.032,376,3.617,404,3.408,405,3.115,420,3.115,421,3.115,422,3.695,423,3.695,424,3.115,425,3.695]],["title/injectables/TodosService.html",[83,0.663,404,1.847]],["body/injectables/TodosService.html",[3,0.167,4,0.147,5,0.147,7,0.254,8,0.997,11,0.027,13,1.054,15,1.519,17,0.424,18,0.329,22,0.167,23,0.023,24,1.321,27,0.012,28,0.012,49,1.071,73,0.91,83,0.604,84,0.784,90,3.222,96,1.73,97,1.73,98,0.788,99,1.403,101,2.58,146,0.985,152,2.382,161,1.171,163,1.171,164,1.77,165,2.58,182,3.618,184,2.952,215,2.394,244,2.03,245,2.509,246,1.915,348,2.724,352,3.618,379,1.684,380,2.03,381,2.266,382,2.03,383,2.03,389,3.522,396,3.116,404,1.684,406,1.291,407,2.266,408,1.291,424,1.642,426,1.642,427,1.947,428,1.947,429,3.062,430,3.062,431,1.947,432,3.062,433,1.947,434,3.062,435,1.947,436,3.062,437,1.947,438,3.062,439,1.947,440,3.618,441,1.642,442,1.947,443,1.642,444,1.947,445,1.947,446,1.947,447,3.618,448,3.062,449,1.947,450,1.642,451,1.947,452,1.642]],["title/classes/UpdateTodoDto.html",[23,0.04,396,2.019]],["body/classes/UpdateTodoDto.html",[3,0.344,4,0.303,5,0.303,7,0.523,10,1.504,11,0.027,13,0.854,17,0.487,22,0.344,23,0.062,27,0.02,28,0.02,98,0.677,99,1.457,184,2.206,185,1.876,187,2.969,188,2.072,194,2.412,280,1.739,351,4.789,357,4.338,379,2.206,396,3.093,407,2.969,453,4.338,454,5.679,455,4.012,456,3.383,457,2.969,458,2.969,459,4.012]],["title/classes/UpdateUserDto.html",[23,0.04,460,2.019]],["body/classes/UpdateUserDto.html",[3,0.393,4,0.346,5,0.346,11,0.026,17,0.479,22,0.393,23,0.055,27,0.022,28,0.022,185,2.142,195,2.519,197,3.39,280,1.986,379,2.519,456,3.863,457,3.39,458,3.39,460,3.361,461,3.863,462,3.39,463,4.581]],["title/classes/User.html",[23,0.04,152,1.259]],["body/classes/User.html",[3,0.261,4,0.23,5,0.23,7,0.398,10,2.009,11,0.027,13,1.14,16,1.745,17,0.367,22,0.261,23,0.037,27,0.017,28,0.017,73,2.868,98,1.014,152,1.604,156,3.277,158,2.972,173,1.544,185,1.426,188,1.724,215,1.855,280,1.855,348,2.947,350,4.168,353,4.168,354,3.658,366,4.519,367,2.572,369,3.167,370,2.257,371,2.572,372,2.572,373,3.609,375,2.572,378,4.168,389,2.972,464,2.572,465,4.28,466,3.05,467,4.28,468,4.28,469,3.05,470,3.05,471,3.05,472,3.05,473,4.28,474,3.05]],["title/controllers/UsersController.html",[0,1.259,475,2.226]],["body/controllers/UsersController.html",[0,0.909,2,0.909,3,0.208,4,0.183,5,0.183,7,0.316,8,1.18,10,1.931,11,0.027,13,1.096,15,1.678,17,0.441,18,0.409,19,1.993,20,1.607,21,1.458,22,0.208,23,0.029,24,1.459,27,0.014,28,0.014,88,1.794,96,1.681,97,1.681,98,0.813,99,1.363,102,3.211,116,1.458,117,1.794,148,2.029,195,2.973,215,2.552,379,1.993,380,3.191,381,2.682,382,2.402,383,2.876,389,3.25,390,3.056,393,3.056,397,3.056,399,3.056,400,2.045,401,2.045,402,2.045,403,4.059,406,1.607,408,1.607,415,2.045,460,3.463,462,2.682,475,2.402,476,2.045,477,2.425,478,2.045,479,2.425,480,2.425,481,2.425,482,2.425,483,2.045,484,2.425,485,2.045,486,2.425,487,2.045,488,2.425,489,2.425,490,2.425,491,2.425,492,2.425,493,2.425,494,2.425,495,2.425,496,2.425]],["title/modules/UsersModule.html",[29,1.173,40,1.847]],["body/modules/UsersModule.html",[2,1.801,3,0.31,4,0.273,5,0.273,11,0.027,17,0.513,18,0.61,22,0.31,23,0.044,27,0.019,28,0.019,29,1.678,31,1.567,32,2.432,40,3.457,42,2.889,43,2.173,44,2.173,46,3.186,47,2.173,48,2.675,49,1.988,129,4.053,148,3.098,152,1.355,475,3.579,487,3.048,497,3.048,498,3.048,499,3.048,500,3.615,501,3.615,502,3.048,503,3.615]],["title/injectables/UsersService.html",[83,0.663,148,1.571]],["body/injectables/UsersService.html",[3,0.159,4,0.14,5,0.14,7,0.243,8,0.962,11,0.027,13,1.083,15,1.582,16,1.196,17,0.416,18,0.314,22,0.159,23,0.022,24,1.376,27,0.012,28,0.012,49,1.023,73,1.382,83,0.583,84,0.749,90,3.312,96,1.697,97,1.697,98,0.771,99,1.376,101,2.744,146,0.942,148,1.382,152,1.821,158,1.776,160,1.569,163,1.119,164,1.957,165,3.062,195,2.672,215,2.359,239,1.569,244,1.958,245,2.773,246,2.117,354,1.377,379,1.625,380,2.773,382,1.958,383,1.958,389,2.744,406,1.233,408,1.233,440,3.528,441,1.569,443,1.569,447,3.528,450,1.569,452,1.569,460,3.177,462,2.186,478,2.491,483,2.491,485,2.491,502,1.569,504,1.569,505,2.955,506,2.955,507,1.861,508,1.861,509,2.955,510,1.861,511,1.861,512,2.955,513,1.861,514,2.955,515,1.861,516,1.861,517,1.861,518,1.861,519,1.377,520,1.861,521,1.861,522,1.861,523,1.861,524,1.861,525,1.861,526,1.861,527,1.861,528,1.861,529,1.861,530,1.861,531,1.861,532,1.861,533,1.861,534,2.955,535,1.861,536,2.955,537,1.861,538,1.861]],["title/coverage.html",[539,3.384]],["body/coverage.html",[0,1.89,1,1.528,5,0.174,6,1.944,11,0.027,19,1.268,23,0.066,27,0.014,28,0.014,41,1.386,56,1.528,66,1.386,83,1.146,85,1.944,86,1.528,87,1.944,93,1.386,98,0.389,105,1.166,107,1.528,111,1.706,113,1.944,126,1.386,127,1.386,137,2.097,144,1.944,148,1.078,152,0.864,159,1.706,184,1.268,186,1.944,187,2.581,195,1.268,196,1.944,197,2.581,202,2.312,233,4.251,244,4.448,246,1.166,248,1.528,249,1.944,258,2.581,268,1.944,269,2.581,279,1.706,288,1.944,303,1.944,306,1.944,317,2.314,319,1.944,321,1.528,322,2.581,323,2.581,336,1.528,348,1.268,349,1.944,369,1.706,376,1.528,377,1.944,396,1.386,404,1.268,426,1.944,453,1.944,460,1.386,461,1.944,464,1.944,475,1.528,476,1.944,504,1.944,519,1.706,539,1.706,540,2.305,541,2.305,542,5.508,543,5.807,544,1.944,545,1.944,546,2.305,547,5.041,548,1.944,549,1.944,550,2.305,551,4.209,552,2.305,553,2.942,554,3.488,555,2.942,556,4.209,557,2.305,558,2.305,559,2.305]],["title/dependencies.html",[32,2.043,560,2.369]],["body/dependencies.html",[11,0.027,18,0.588,23,0.056,27,0.019,28,0.019,32,1.761,49,1.914,61,2.307,63,2.575,110,2.935,132,1.914,134,2.575,173,1.761,194,2.092,224,2.935,257,2.575,294,3.919,295,2.935,313,2.935,333,2.575,370,3.467,457,2.575,458,2.575,561,6.092,562,3.48,563,3.48,564,3.48,565,3.48,566,3.48,567,3.48,568,3.48,569,3.48,570,3.48,571,3.48,572,3.48,573,3.48,574,3.48,575,3.48,576,3.48,577,4.685,578,3.48,579,3.48,580,3.48,581,3.48,582,3.48,583,3.48,584,3.48,585,3.48,586,3.48,587,3.48,588,3.48]],["title/miscellaneous/enumerations.html",[589,1.545,590,3.404]],["body/miscellaneous/enumerations.html",[7,0.591,11,0.026,27,0.022,28,0.022,202,3.004,219,4.682,228,4.109,229,4.109,230,4.682,231,4.682,232,4.109,342,3.86,589,2.492,590,3.821,591,3.821]],["title/miscellaneous/functions.html",[589,1.545,592,3.404]],["body/miscellaneous/functions.html",[7,0.509,11,0.024,16,2.048,27,0.02,28,0.02,64,2.886,66,3.037,96,1.957,97,1.957,98,0.946,99,1.587,111,4.146,159,3.738,202,2.585,234,3.289,235,4.26,342,3.037,519,3.738,544,3.289,545,4.26,548,3.289,549,4.725,555,3.289,589,2.145,591,3.289,592,3.289,593,3.9,594,5.052,595,3.9,596,3.9,597,5.052,598,3.9]],["title/index.html",[7,0.366,599,2.81,600,2.81]],["body/index.html",[4,0.253,11,0.026,27,0.018,28,0.018,173,1.698,189,2.224,228,2.483,229,3.382,232,2.483,539,2.483,601,3.355,602,3.355,603,4.571,604,3.355,605,3.355,606,3.355,607,3.355,608,3.355,609,3.355,610,5.199,611,3.355,612,3.355,613,3.355,614,6.167,615,3.355,616,3.355,617,6.026,618,3.355,619,3.355,620,4.571,621,3.355,622,3.355,623,3.355,624,4.571,625,3.355,626,3.355,627,3.355,628,4.571,629,4.571,630,3.355,631,3.355,632,3.355,633,3.355,634,3.355,635,2.829,636,3.355,637,3.355,638,3.355,639,3.355,640,3.355,641,3.355,642,3.355,643,3.355,644,3.355,645,3.355,646,2.829,647,3.355,648,3.355,649,3.355,650,3.355,651,3.355,652,3.355,653,2.829]],["title/modules.html",[31,1.983]],["body/modules.html",[11,0.022,27,0.022,28,0.022,30,2.972,31,1.943,36,2.696,37,2.696,38,2.696,39,2.696,40,2.466,635,5.257,654,6.235,655,6.235,656,6.517,657,5.516,658,5.516]],["title/overview.html",[659,3.857]],["body/overview.html",[2,1.165,11,0.026,27,0.017,28,0.017,30,4.345,31,1.347,32,2.193,33,2.62,34,2.62,35,2.62,36,3.886,37,3.002,38,3.002,39,3.416,40,3.322,41,3.002,42,2.606,43,1.868,44,1.868,84,1.251,105,3.056,122,2.62,124,2.62,125,2.62,126,3.002,127,3.002,148,2.824,185,1.453,318,2.299,404,2.746,420,2.62,421,2.62,497,2.62,498,2.62,499,2.62,659,2.62,660,3.107,661,3.107,662,3.107,663,3.107,664,3.107]],["title/properties.html",[188,1.626,560,2.369]],["body/properties.html",[11,0.026,27,0.023,28,0.023,188,1.998,189,3.288,261,4.182,646,4.182,653,4.182,665,4.96,666,4.96]],["title/miscellaneous/variables.html",[589,1.545,667,3.404]],["body/miscellaneous/variables.html",[7,0.591,11,0.026,16,1.476,19,3.054,27,0.022,28,0.022,73,2.119,98,0.765,258,3.353,279,4.109,283,3.821,342,3.338,553,5.062,589,2.492,667,3.821,668,5.553,669,5.553,670,4.532]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":244,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":665,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["2.1.3",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":664,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":661,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":660,"title":{},"body":{"overview.html":{}}}],["6.0.5",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["6.21.3",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":663,"title":{},"body":{"overview.html":{}}}],["7.0.3",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":662,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["9.1.1",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":341,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["accesstoken",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["allownull",{"_index":355,"title":{},"body":{"classes/Todo.html":{}}}],["amazing",{"_index":636,"title":{},"body":{"index.html":{}}}],["api",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":616,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":609,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":41,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":269,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":276,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:6",{"_index":304,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":273,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":278,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":281,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":305,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":36,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":646,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":105,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoincrement",{"_index":468,"title":{},"body":{"classes/User.html":{}}}],["autoloadmodels",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":658,"title":{},"body":{"modules.html":{}}}],["await",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":637,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(errors",{"_index":529,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["belongsto",{"_index":365,"title":{},"body":{"classes/Todo.html":{}}}],["belongsto(undefined",{"_index":361,"title":{},"body":{"classes/Todo.html":{}}}],["body",{"_index":399,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":357,"title":{},"body":{"classes/Todo.html":{},"classes/UpdateTodoDto.html":{}}}],["bootstrap",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":656,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":654,"title":{},"body":{"modules.html":{}}}],["building",{"_index":604,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":330,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["canactivate",{"_index":270,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["canactivate(context",{"_index":274,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["catch",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["check",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":23,"title":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/Todo.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":185,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/Todo.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_todosmodule",{"_index":420,"title":{},"body":{"modules/TodosModule.html":{},"overview.html":{}}}],["cluster_todosmodule_providers",{"_index":421,"title":{},"body":{"modules/TodosModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":498,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":499,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":366,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["column({type",{"_index":353,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["comparehash",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparehash(password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparehash(value",{"_index":596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["config",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["configmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('db",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('secret",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["const",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"classes/EnvironmentVariables.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(todo",{"_index":442,"title":{},"body":{"injectables/TodosService.html":{}}}],["constructor(@injectmodel(user",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":307,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":271,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(todomodel",{"_index":427,"title":{},"body":{"injectables/TodosService.html":{}}}],["constructor(usermodel",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":277,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["context.getclass",{"_index":286,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":285,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":339,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/TodosController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/TodosController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('todos",{"_index":409,"title":{},"body":{"controllers/TodosController.html":{}}}],["controller('users",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":447,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["coverage",{"_index":539,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":379,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(@req",{"_index":410,"title":{},"body":{"controllers/TodosController.html":{}}}],["create(createuserdto",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(req",{"_index":384,"title":{},"body":{"controllers/TodosController.html":{}}}],["create(user",{"_index":430,"title":{},"body":{"injectables/TodosService.html":{}}}],["createtododto",{"_index":184,"title":{"classes/CreateTodoDto.html":{}},"body":{"classes/CreateTodoDto.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":195,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["cross",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":324,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["datatype",{"_index":367,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["datatype.boolean",{"_index":374,"title":{},"body":{"classes/Todo.html":{}}}],["datatype.integer",{"_index":375,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["datatype.string",{"_index":373,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["date",{"_index":325,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["db",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["db_dialect",{"_index":203,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_host",{"_index":204,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_name",{"_index":205,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_password",{"_index":206,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_port",{"_index":207,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_user",{"_index":208,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"classes/UpdateTodoDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":358,"title":{},"body":{"classes/Todo.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":402,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":393,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["deleted",{"_index":452,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":189,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/Todo.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":228,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["disable",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["documentation",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["documentation.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dto/create",{"_index":406,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":408,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":625,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":605,"title":{},"body":{"index.html":{}}}],["email",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["enableimplicitconversion",{"_index":238,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["enum",{"_index":227,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["enumerations",{"_index":590,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["env.${process.env.node_env",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":219,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{}}}],["environmentvariables",{"_index":137,"title":{"classes/EnvironmentVariables.html":{}},"body":{"modules/AuthModule.html":{},"classes/EnvironmentVariables.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["error",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["error(errors.tostring",{"_index":247,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error.errors.map((error",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["error.message",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["errors",{"_index":239,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/UsersService.html":{}}}],["errors.length",{"_index":243,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["eslint",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["eslint/no",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["executioncontext",{"_index":275,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["expiresin",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["express.request",{"_index":320,"title":{},"body":{"interfaces/Request.html":{}}}],["extends",{"_index":280,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"classes/Todo.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["extractjwt",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":242,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/JwtStrategy.html":{},"classes/Todo.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":380,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@req",{"_index":412,"title":{},"body":{"controllers/TodosController.html":{}}}],["findall(req",{"_index":386,"title":{},"body":{"controllers/TodosController.html":{}}}],["findall(user",{"_index":432,"title":{},"body":{"injectables/TodosService.html":{}}}],["findbyemail",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":381,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{}}}],["findone(@param('id",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(@req",{"_index":414,"title":{},"body":{"controllers/TodosController.html":{}}}],["findone(id",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(req",{"_index":388,"title":{},"body":{"controllers/TodosController.html":{}}}],["findone(user",{"_index":434,"title":{},"body":{"injectables/TodosService.html":{}}}],["foreignkey",{"_index":368,"title":{},"body":{"classes/Todo.html":{}}}],["foreignkey(undefined)@column({type",{"_index":363,"title":{},"body":{"classes/Todo.html":{}}}],["framework",{"_index":603,"title":{},"body":{"index.html":{}}}],["function",{"_index":233,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["functions",{"_index":592,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":390,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":599,"title":{"index.html":{}},"body":{}}],["graph",{"_index":657,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":632,"title":{},"body":{"index.html":{}}}],["guards/local",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":343,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["hash",{"_index":597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashstring",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hashstring(createuserdto.password",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashstring(updateuserdto.password",{"_index":535,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashstring(value",{"_index":598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasmany",{"_index":473,"title":{},"body":{"classes/User.html":{}}}],["hasmany(undefined",{"_index":471,"title":{},"body":{"classes/User.html":{}}}],["health",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":267,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":248,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":37,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["here",{"_index":643,"title":{},"body":{"index.html":{}}}],["hstore",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["https://nestjs.com",{"_index":650,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":331,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["id",{"_index":389,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":337,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":83,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":441,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":613,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":615,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":338,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["intercept(context",{"_index":345,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["interface",{"_index":317,"title":{"interfaces/Request.html":{},"interfaces/Response.html":{}},"body":{"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":318,"title":{},"body":{"interfaces/Request.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":279,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":454,"title":{},"body":{"classes/UpdateTodoDto.html":{}}}],["isdone",{"_index":351,"title":{},"body":{"classes/Todo.html":{},"classes/UpdateTodoDto.html":{}}}],["isemail",{"_index":198,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":225,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isenum(environment",{"_index":220,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isglobal",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":200,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":216,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["ispublic",{"_index":283,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":191,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/EnvironmentVariables.html":{}}}],["join",{"_index":639,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":56,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":126,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":647,"title":{},"body":{"index.html":{}}}],["license",{"_index":653,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":629,"title":{},"body":{"index.html":{}}}],["line",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["load",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":313,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":107,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":127,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginswagger",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loginswagger()@public()@useguards(localauthguard)@post('login",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["map",{"_index":334,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":326,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["metadata",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":589,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":628,"title":{},"body":{"index.html":{}}}],["mode",{"_index":620,"title":{},"body":{"index.html":{}}}],["model",{"_index":350,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["model/todo.model",{"_index":424,"title":{},"body":{"modules/TodosModule.html":{},"injectables/TodosService.html":{}}}],["model/user.model",{"_index":502,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/SharedModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/SharedModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/SharedModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":642,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":648,"title":{},"body":{"index.html":{}}}],["name",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":610,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":652,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":329,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":457,"title":{},"body":{"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["new",{"_index":246,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["node.js",{"_index":602,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":209,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["notfoundexception",{"_index":440,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["npm",{"_index":614,"title":{},"body":{"index.html":{}}}],["null",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":215,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object.entries(httpstatus).find",{"_index":340,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["observable",{"_index":332,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["open",{"_index":630,"title":{},"body":{"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":659,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":560,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":401,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":415,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["paranoid",{"_index":371,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["parseintpipe",{"_index":403,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["partialtype",{"_index":456,"title":{},"body":{"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createtododto",{"_index":459,"title":{},"body":{"classes/UpdateTodoDto.html":{}}}],["partialtype(createuserdto",{"_index":463,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":294,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{}}}],["patch",{"_index":400,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":397,"title":{},"body":{"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["path",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["payload",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pg",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["pipe(map((data",{"_index":344,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["plaintoinstance",{"_index":223,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoinstance(environmentvariables",{"_index":237,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["please",{"_index":640,"title":{},"body":{"index.html":{}}}],["port",{"_index":210,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["post",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["primarykey",{"_index":467,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":232,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["progressive",{"_index":601,"title":{},"body":{"index.html":{}}}],["project",{"_index":631,"title":{},"body":{"index.html":{}}}],["promise",{"_index":312,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["properties",{"_index":188,"title":{"properties.html":{}},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"classes/Todo.html":{},"classes/UpdateTodoDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@get()@healthcheck",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["qa",{"_index":230,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{}}}],["raw",{"_index":533,"title":{},"body":{"injectables/UsersService.html":{}}}],["read",{"_index":641,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodosController.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":235,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["reflect",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":272,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["remove",{"_index":382,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(@req",{"_index":418,"title":{},"body":{"controllers/TodosController.html":{}}}],["remove(id",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(req",{"_index":392,"title":{},"body":{"controllers/TodosController.html":{}}}],["remove(user",{"_index":436,"title":{},"body":{"injectables/TodosService.html":{}}}],["repository",{"_index":612,"title":{},"body":{"index.html":{}}}],["req",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodosController.html":{}}}],["request",{"_index":93,"title":{"interfaces/Request.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/Request.html":{},"controllers/TodosController.html":{},"coverage.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":321,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["responsetransforminterceptor",{"_index":336,"title":{"injectables/ResponseTransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["result",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":450,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["route.decorator",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{}}}],["route.decorator.ts",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":617,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":333,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":335,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["scalable",{"_index":606,"title":{},"body":{"index.html":{}}}],["secret",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sequelize",{"_index":370,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{},"dependencies.html":{}}}],["sequelizehealthindicator",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["sequelizemodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([todo",{"_index":425,"title":{},"body":{"modules/TodosModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":503,"title":{},"body":{"modules/UsersModule.html":{}}}],["sequelizemodule.forrootasync",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":607,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/config/config",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["shared/config/env.validation",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/decorators/public",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{}}}],["shared/helpers",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["shared/interfaces",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodosController.html":{}}}],["shared/shared.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":38,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":608,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["skipmissingproperties",{"_index":241,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"modules/SharedModule.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":634,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../env.validation.ts",{"_index":591,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:8",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/api",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/auth/auth.controller.ts",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/jwt",{"_index":268,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":303,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":288,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:21",{"_index":291,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":289,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":306,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:14",{"_index":310,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":308,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/health/health.controller.ts",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:22",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":265,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/config/config.ts",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["src/shared/config/env.validation.ts",{"_index":202,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/shared/config/env.validation.ts:14",{"_index":221,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/config/env.validation.ts:17",{"_index":222,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/config/env.validation.ts:20",{"_index":211,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/config/env.validation.ts:23",{"_index":212,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/config/env.validation.ts:26",{"_index":217,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/config/env.validation.ts:29",{"_index":218,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/config/env.validation.ts:32",{"_index":214,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/config/env.validation.ts:35",{"_index":213,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/shared/decorators/public",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/helpers/index.ts",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/interceptors/response",{"_index":322,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["src/shared/interfaces/index.ts",{"_index":319,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":347,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/todos/dto/create",{"_index":186,"title":{},"body":{"classes/CreateTodoDto.html":{},"coverage.html":{}}}],["src/todos/dto/update",{"_index":453,"title":{},"body":{"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["src/todos/model/todo.model.ts",{"_index":349,"title":{},"body":{"classes/Todo.html":{},"coverage.html":{}}}],["src/todos/model/todo.model.ts:17",{"_index":360,"title":{},"body":{"classes/Todo.html":{}}}],["src/todos/model/todo.model.ts:20",{"_index":356,"title":{},"body":{"classes/Todo.html":{}}}],["src/todos/model/todo.model.ts:23",{"_index":359,"title":{},"body":{"classes/Todo.html":{}}}],["src/todos/model/todo.model.ts:27",{"_index":364,"title":{},"body":{"classes/Todo.html":{}}}],["src/todos/model/todo.model.ts:30",{"_index":362,"title":{},"body":{"classes/Todo.html":{}}}],["src/todos/todos.controller.ts",{"_index":377,"title":{},"body":{"controllers/TodosController.html":{},"coverage.html":{}}}],["src/todos/todos.controller.ts:22",{"_index":385,"title":{},"body":{"controllers/TodosController.html":{}}}],["src/todos/todos.controller.ts:27",{"_index":387,"title":{},"body":{"controllers/TodosController.html":{}}}],["src/todos/todos.controller.ts:32",{"_index":391,"title":{},"body":{"controllers/TodosController.html":{}}}],["src/todos/todos.controller.ts:37",{"_index":398,"title":{},"body":{"controllers/TodosController.html":{}}}],["src/todos/todos.controller.ts:46",{"_index":394,"title":{},"body":{"controllers/TodosController.html":{}}}],["src/todos/todos.module.ts",{"_index":422,"title":{},"body":{"modules/TodosModule.html":{}}}],["src/todos/todos.service.ts",{"_index":426,"title":{},"body":{"injectables/TodosService.html":{},"coverage.html":{}}}],["src/todos/todos.service.ts:12",{"_index":431,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/todos/todos.service.ts:16",{"_index":433,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/todos/todos.service.ts:20",{"_index":435,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/todos/todos.service.ts:30",{"_index":439,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/todos/todos.service.ts:41",{"_index":437,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/todos/todos.service.ts:9",{"_index":428,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/users/dto/create",{"_index":196,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":461,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/model/user.model.ts",{"_index":464,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/model/user.model.ts:10",{"_index":469,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:13",{"_index":466,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:16",{"_index":470,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:19",{"_index":472,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:22",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:27",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":500,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:13",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:43",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:60",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["stage",{"_index":231,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":618,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":621,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":622,"title":{},"body":{"index.html":{}}}],["started",{"_index":600,"title":{"index.html":{}},"body":{}}],["starter",{"_index":611,"title":{},"body":{"index.html":{}}}],["statements",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":327,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["stay",{"_index":644,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":293,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/Todo.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":282,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":287,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["support",{"_index":635,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":655,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":328,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["table",{"_index":369,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["terminusmodule",{"_index":266,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":229,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["test:covsupport",{"_index":627,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":626,"title":{},"body":{"index.html":{}}}],["tests",{"_index":624,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":633,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":316,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.db.pingcheck('database",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check([async",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.sign(payload",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":284,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.todomodel.create",{"_index":444,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todomodel.destroy",{"_index":451,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todomodel.findone",{"_index":446,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todomodel.update(updatetododto",{"_index":449,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todosservice.create(req.user",{"_index":411,"title":{},"body":{"controllers/TodosController.html":{}}}],["this.todosservice.findall(req.user",{"_index":413,"title":{},"body":{"controllers/TodosController.html":{}}}],["this.todosservice.findone(req.user",{"_index":416,"title":{},"body":{"controllers/TodosController.html":{}}}],["this.todosservice.remove(req.user",{"_index":419,"title":{},"body":{"controllers/TodosController.html":{}}}],["this.todosservice.update(req.user",{"_index":417,"title":{},"body":{"controllers/TodosController.html":{}}}],["this.usermodel.create",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.destroy",{"_index":538,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findall",{"_index":530,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbypk(id",{"_index":531,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":532,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.update",{"_index":537,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(email",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyid(id",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(payload.sub",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usersservice.remove(id",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":245,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/LocalStrategy.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":190,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/Todo.html":{}}}],["todo",{"_index":348,"title":{"classes/Todo.html":{}},"body":{"classes/Todo.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/User.html":{},"coverage.html":{}}}],["todo.dto",{"_index":407,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{}}}],["todo.dto.ts",{"_index":187,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["todo.dto.ts:5",{"_index":193,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["todo.dto.ts:7",{"_index":455,"title":{},"body":{"classes/UpdateTodoDto.html":{}}}],["todo.dto.ts:8",{"_index":192,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["todomodel",{"_index":429,"title":{},"body":{"injectables/TodosService.html":{}}}],["todos",{"_index":378,"title":{},"body":{"controllers/TodosController.html":{},"classes/User.html":{}}}],["todos.controller",{"_index":423,"title":{},"body":{"modules/TodosModule.html":{}}}],["todos.service",{"_index":405,"title":{},"body":{"controllers/TodosController.html":{},"modules/TodosModule.html":{}}}],["todos/model/todo.model",{"_index":474,"title":{},"body":{"classes/User.html":{}}}],["todos/todos.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["todoscontroller",{"_index":376,"title":{"controllers/TodosController.html":{}},"body":{"controllers/TodosController.html":{},"modules/TodosModule.html":{},"coverage.html":{}}}],["todosmodule",{"_index":39,"title":{"modules/TodosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodosModule.html":{},"modules.html":{},"overview.html":{}}}],["todosservice",{"_index":404,"title":{"injectables/TodosService.html":{}},"body":{"controllers/TodosController.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":645,"title":{},"body":{"index.html":{}}}],["transform.interceptor.ts",{"_index":323,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["transform.interceptor.ts:22",{"_index":346,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["transformer",{"_index":224,"title":{},"body":{"classes/EnvironmentVariables.html":{},"dependencies.html":{}}}],["true",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariables.html":{},"injectables/JwtAuthGuard.html":{},"classes/Todo.html":{},"injectables/TodosService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["twitter",{"_index":651,"title":{},"body":{"index.html":{}}}],["type",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/Todo.html":{},"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":443,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["types",{"_index":458,"title":{},"body":{"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/Todo.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":314,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":354,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["underscored",{"_index":372,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["unique",{"_index":465,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":623,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":666,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["update",{"_index":383,"title":{},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(id",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(req",{"_index":395,"title":{},"body":{"controllers/TodosController.html":{}}}],["update(user",{"_index":438,"title":{},"body":{"injectables/TodosService.html":{}}}],["updatedtodo",{"_index":448,"title":{},"body":{"injectables/TodosService.html":{}}}],["updateduser",{"_index":536,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatetododto",{"_index":396,"title":{"classes/UpdateTodoDto.html":{}},"body":{"controllers/TodosController.html":{},"injectables/TodosService.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":460,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto.password",{"_index":534,"title":{},"body":{"injectables/UsersService.html":{}}}],["useclass",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":152,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Request.html":{},"classes/Todo.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.$get('todos",{"_index":445,"title":{},"body":{"injectables/TodosService.html":{}}}],["user.dto",{"_index":462,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":197,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":199,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":201,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodosService.html":{}}}],["user.password",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":352,"title":{},"body":{"classes/Todo.html":{},"injectables/TodosService.html":{}}}],["usermodel",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":311,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":315,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":501,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/model/user.model",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Request.html":{},"classes/Todo.html":{},"modules/TodosModule.html":{},"injectables/TodosService.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userscontroller",{"_index":475,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":40,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":148,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validate(config",{"_index":234,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validate(payload",{"_index":290,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":309,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatedconfig",{"_index":236,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync",{"_index":226,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":240,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validateuser",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":194,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/UpdateTodoDto.html":{},"dependencies.html":{}}}],["value",{"_index":342,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":667,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["version",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{},"properties.html":{}}}],["version_neutral",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["watch",{"_index":619,"title":{},"body":{"index.html":{}}}],["website",{"_index":649,"title":{},"body":{"index.html":{}}}],["world",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["you'd",{"_index":638,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TodosModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { Public } from './shared/decorators/public-route.decorator';\n\n@Controller()\nexport class AppController {\n  @Public()\n  @Get()\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTodosModule\n\nTodosModule\n\nAppModule -->\n\nTodosModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TodosModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TodosModule } from './todos/todos.module';\nimport { AuthModule } from './auth/auth.module';\nimport { JwtAuthGuard } from './auth/guards/jwt-auth.guard';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport config from './shared/config/config';\nimport { validate } from './shared/config/env.validation';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigModule.forRoot({\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n      isGlobal: true,\n      load: [config],\n      validate,\n    }),\n    UsersModule,\n    SequelizeModule.forRootAsync({\n      useFactory: (configService: ConfigService) => ({\n        ...configService.get('db'),\n        autoLoadModels: true,\n        synchronize: true,\n      }),\n      inject: [ConfigService],\n    }),\n    SharedModule,\n    TodosModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginSwagger()@Public()@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards } from '@nestjs/common';\nimport { Request } from '../shared/interfaces';\nimport { Public } from '../shared/decorators/public-route.decorator';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { ApiTags } from '@nestjs/swagger';\nimport { LoginSwagger } from './api-documentation';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @LoginSwagger()\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Req() req: Request) {\n    return this.authService.login(req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { AuthController } from './auth.controller';\nimport { ConfigService } from '@nestjs/config';\nimport { EnvironmentVariables } from '../shared/config/config';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('secret'),\n        signOptions: { expiresIn: '1d' },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { accessToken: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { compareHash } from '../shared/helpers';\nimport { User } from '../users/model/user.model';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, password: string) {\n    const user = await this.usersService.findByEmail(email);\n    if (user && (await compareHash(password, user.password))) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  login(user: User) {\n    const payload = { email: user.email, sub: user.id };\n    return {\n      accessToken: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTodoDto.html":{"url":"classes/CreateTodoDto.html","title":"class - CreateTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todos/dto/create-todo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/dto/create-todo.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/dto/create-todo.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateTodoDto {\n  @IsString()\n  title: string;\n\n  @IsString()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/env.validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DB_DIALECT\n                            \n                            \n                                DB_HOST\n                            \n                            \n                                DB_NAME\n                            \n                            \n                                DB_PASSWORD\n                            \n                            \n                                DB_PORT\n                            \n                            \n                                DB_USER\n                            \n                            \n                                NODE_ENV\n                            \n                            \n                                PORT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DB_DIALECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Environment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/config/env.validation.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { plainToInstance } from 'class-transformer';\nimport { IsEnum, IsNumber, IsString, validateSync } from 'class-validator';\n\nenum Environment {\n  DEVELOPMENT = 'development',\n  TEST = 'test',\n  QA = 'qa',\n  STAGE = 'stage',\n  PRODUCTION = 'production',\n}\n\nclass EnvironmentVariables {\n  @IsEnum(Environment)\n  NODE_ENV: Environment;\n\n  @IsNumber()\n  PORT: number;\n\n  @IsString()\n  DB_DIALECT: string;\n\n  @IsString()\n  DB_HOST: string;\n\n  @IsNumber()\n  DB_PORT: number;\n\n  @IsString()\n  DB_USER: string;\n\n  @IsString()\n  DB_PASSWORD: string;\n\n  @IsString()\n  DB_NAME: string;\n}\n\nexport function validate(config: Record) {\n  const validatedConfig = plainToInstance(EnvironmentVariables, config, {\n    enableImplicitConversion: true,\n  });\n  const errors = validateSync(validatedConfig, {\n    skipMissingProperties: false,\n  });\n\n  if (errors.length > 0) {\n    throw new Error(errors.toString());\n  }\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, VERSION_NEUTRAL } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  SequelizeHealthIndicator,\n} from '@nestjs/terminus';\nimport { Public } from 'src/shared/decorators/public-route.decorator';\n\n@Controller({\n  path: 'health',\n  version: VERSION_NEUTRAL,\n})\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: SequelizeHealthIndicator,\n  ) {}\n\n  @Public()\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([async () => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from '../../shared/decorators/public-route.decorator';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) return true;\n\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UsersService } from '../../users/users.service';\nimport { ConfigService } from '@nestjs/config';\nimport { EnvironmentVariables } from '../../shared/config/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private usersService: UsersService,\n    configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('secret'),\n    });\n  }\n\n  async validate(payload: any) {\n    return await this.usersService.findById(payload.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/local-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n\n    if (!user) throw new UnauthorizedException();\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../../users/model/user.model';\n\nexport interface Request extends Express.Request {\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/response-transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  message: string;\n  date: Date;\n  statusCode: number;\n  data: T;\n}\n\n@Injectable()\nexport class ResponseTransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    const date = new Date();\n    const statusCode = context.switchToHttp().getResponse().statusCode;\n    const [message] = Object.entries(HttpStatus).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === statusCode,\n    );\n\n    return next\n      .handle()\n      .pipe(map((data) => ({ message, statusCode, date, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseTransformInterceptor.html":{"url":"injectables/ResponseTransformInterceptor.html","title":"injectable - ResponseTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/response-transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interceptors/response-transform.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  message: string;\n  date: Date;\n  statusCode: number;\n  data: T;\n}\n\n@Injectable()\nexport class ResponseTransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    const date = new Date();\n    const statusCode = context.switchToHttp().getResponse().statusCode;\n    const [message] = Object.entries(HttpStatus).find(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ([_, value]) => value === statusCode,\n    );\n\n    return next\n      .handle()\n      .pipe(map((data) => ({ message, statusCode, date, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todos/model/todo.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                isDone\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/model/todo.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, defaultValue: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/model/todo.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/model/todo.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/model/todo.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/model/todo.model.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  Model,\n  Table,\n} from 'sequelize-typescript';\nimport { User } from '../../users/model/user.model';\n\n@Table({\n  paranoid: true,\n  underscored: true,\n})\nexport class Todo extends Model {\n  @Column({ type: DataType.STRING })\n  title: string;\n\n  @Column({ type: DataType.STRING, allowNull: true })\n  description?: string;\n\n  @Column({ type: DataType.BOOLEAN, defaultValue: false })\n  isDone: boolean;\n\n  @ForeignKey(() => User)\n  @Column({ type: DataType.INTEGER, allowNull: false })\n  userId: number;\n\n  @BelongsTo(() => User)\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TodosController.html":{"url":"controllers/TodosController.html","title":"controller - TodosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TodosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todos/todos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                todos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(req: Request, createTodoDto: CreateTodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/todos/todos.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTodoDto\n                                    \n                                                CreateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/todos/todos.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(req: Request, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/todos/todos.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(req: Request, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/todos/todos.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(req: Request, id: number, updateTodoDto: UpdateTodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/todos/todos.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTodoDto\n                                    \n                                                UpdateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { TodosService } from './todos.service';\nimport { CreateTodoDto } from './dto/create-todo.dto';\nimport { UpdateTodoDto } from './dto/update-todo.dto';\nimport { Request } from '../shared/interfaces';\n\n@Controller('todos')\nexport class TodosController {\n  constructor(private readonly todosService: TodosService) {}\n\n  @Post()\n  create(@Req() req: Request, @Body() createTodoDto: CreateTodoDto) {\n    return this.todosService.create(req.user, createTodoDto);\n  }\n\n  @Get()\n  findAll(@Req() req: Request) {\n    return this.todosService.findAll(req.user as any);\n  }\n\n  @Get(':id')\n  findOne(@Req() req: Request, @Param('id', ParseIntPipe) id: number) {\n    return this.todosService.findOne(req.user, id);\n  }\n\n  @Patch(':id')\n  update(\n    @Req() req: Request,\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateTodoDto: UpdateTodoDto,\n  ) {\n    return this.todosService.update(req.user, id, updateTodoDto);\n  }\n\n  @Delete(':id')\n  remove(@Req() req: Request, @Param('id', ParseIntPipe) id: number) {\n    return this.todosService.remove(req.user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodosModule.html":{"url":"modules/TodosModule.html","title":"module - TodosModule","body":"\n                   \n\n\n\n\n    Modules\n    TodosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TodosModule\n\n\n\ncluster_TodosModule_providers\n\n\n\n\nTodosService\n\nTodosService\n\n\n\nTodosModule\n\nTodosModule\n\nTodosModule -->\n\nTodosService->TodosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todos/todos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TodosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TodosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { TodosService } from './todos.service';\nimport { TodosController } from './todos.controller';\nimport { Todo } from './model/todo.model';\nimport { User } from '../users/model/user.model';\n\n@Module({\n  imports: [SequelizeModule.forFeature([Todo, User])],\n  controllers: [TodosController],\n  providers: [TodosService],\n})\nexport class TodosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodosService.html":{"url":"injectables/TodosService.html","title":"injectable - TodosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TodosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todos/todos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(todoModel)\n                    \n                \n                        \n                            \n                                Defined in src/todos/todos.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createTodoDto: CreateTodoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/todos/todos.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTodoDto\n                                    \n                                                CreateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/todos/todos.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(user: User, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todos/todos.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(user: User, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todos/todos.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: number, updateTodoDto: UpdateTodoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/todos/todos.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTodoDto\n                                    \n                                                UpdateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from '../users/model/user.model';\nimport { CreateTodoDto } from './dto/create-todo.dto';\nimport { UpdateTodoDto } from './dto/update-todo.dto';\nimport { Todo } from './model/todo.model';\n\n@Injectable()\nexport class TodosService {\n  constructor(@InjectModel(Todo) private todoModel: typeof Todo) {}\n\n  create(user: User, createTodoDto: CreateTodoDto) {\n    return this.todoModel.create({ ...createTodoDto, userId: user.id });\n  }\n\n  async findAll(user: User) {\n    return await user.$get('todos');\n  }\n\n  async findOne(user: User, id: number) {\n    const todo = await this.todoModel.findOne({\n      where: { id, userId: user.id },\n    });\n\n    if (!todo) throw new NotFoundException();\n\n    return todo;\n  }\n\n  async update(user: User, id: number, updateTodoDto: UpdateTodoDto) {\n    const [count, updatedTodo] = await this.todoModel.update(updateTodoDto, {\n      where: { id, userId: user.id },\n      returning: true,\n    });\n\n    if (count === 0) throw new NotFoundException();\n\n    return updatedTodo;\n  }\n\n  async remove(user: User, id: number) {\n    const count = await this.todoModel.destroy({\n      where: { id, userId: user.id },\n    });\n\n    if (count === 0) throw new NotFoundException();\n\n    return 'Todo deleted';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTodoDto.html":{"url":"classes/UpdateTodoDto.html","title":"class - UpdateTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todos/dto/update-todo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                isDone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isDone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todos/dto/update-todo.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { IsBoolean } from 'class-validator';\nimport { CreateTodoDto } from './create-todo.dto';\n\nexport class UpdateTodoDto extends PartialType(CreateTodoDto) {\n  @IsBoolean()\n  isDone?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/model/user.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/model/user.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, primaryKey: true, autoIncrement: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/model/user.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/model/user.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/model/user.model.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, HasMany, Model, Table } from 'sequelize-typescript';\nimport { Todo } from '../../todos/model/todo.model';\n\n@Table({\n  paranoid: true,\n  underscored: true,\n})\nexport class User extends Model {\n  @Column({ type: DataType.INTEGER, primaryKey: true, autoIncrement: true })\n  id: number;\n\n  @Column({ type: DataType.STRING, unique: true })\n  email: string;\n\n  @Column({ type: DataType.STRING })\n  password: string;\n\n  @HasMany(() => Todo)\n  todos: Todo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public } from '../shared/decorators/public-route.decorator';\n\n@Public()\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseIntPipe) id: number) {\n    return this.usersService.findById(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateUserDto: UpdateUserDto,\n  ) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id', ParseIntPipe) id: number) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User } from './model/user.model';\n\n@Module({\n  imports: [SequelizeModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { hashString } from '../shared/helpers';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './model/user.model';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User) private userModel: typeof User) {}\n\n  async create(createUserDto: CreateUserDto) {\n    try {\n      createUserDto.password = await hashString(createUserDto.password);\n      return await this.userModel.create({ ...createUserDto });\n    } catch (error) {\n      const errors = error.errors.map((error: any) => error.message);\n\n      throw new BadRequestException(errors);\n    }\n  }\n\n  findAll() {\n    return this.userModel.findAll();\n  }\n\n  async findById(id: number) {\n    const user = await this.userModel.findByPk(id);\n\n    if (!user) throw new NotFoundException();\n\n    return user;\n  }\n\n  async findByEmail(email: string) {\n    return await this.userModel.findOne({ where: { email }, raw: true });\n  }\n\n  async update(id: number, updateUserDto: UpdateUserDto) {\n    updateUserDto.password = updateUserDto.password\n      ? await hashString(updateUserDto.password)\n      : undefined;\n    const [count, updatedUser] = await this.userModel.update(\n      { ...updateUserDto },\n      {\n        where: { id },\n        returning: true,\n      },\n    );\n\n    if (count === 0) throw new NotFoundException();\n\n    return updatedUser;\n  }\n\n  async remove(id: number) {\n    const count = await this.userModel.destroy({ where: { id } });\n\n    if (count === 0) throw new NotFoundException();\n\n    return 'User deleted';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/api-documentation.ts\n            \n            function\n            LoginSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/config/config.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/env.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/shared/config/env.validation.ts\n            \n            function\n            validate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/public-route.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/public-route.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/helpers/index.ts\n            \n            function\n            compareHash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/helpers/index.ts\n            \n            function\n            hashString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/interceptors/response-transform.interceptor.ts\n            \n            injectable\n            ResponseTransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/response-transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/index.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todos/dto/create-todo.dto.ts\n            \n            class\n            CreateTodoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todos/dto/update-todo.dto.ts\n            \n            class\n            UpdateTodoDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todos/model/todo.model.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/todos/todos.controller.ts\n            \n            controller\n            TodosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/todos/todos.service.ts\n            \n            injectable\n            TodosService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/model/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/sequelize : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @nestjs/terminus : ^9.1.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cross-env : ^7.0.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.3\n        \n            pg-hstore : ^2.3.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            sequelize : ^6.21.3\n        \n            sequelize-typescript : ^2.1.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Environment   (src/.../env.validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/config/env.validation.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 DEVELOPMENT\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 TEST\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n                        \n                            \n                                 QA\n                            \n                        \n                        \n                            \n                                Value : qa\n                            \n                        \n                        \n                            \n                                 STAGE\n                            \n                        \n                        \n                            \n                                Value : stage\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            compareHash   (src/.../index.ts)\n                        \n                        \n                            hashString   (src/.../index.ts)\n                        \n                        \n                            LoginSwagger   (src/.../api-documentation.ts)\n                        \n                        \n                            validate   (src/.../env.validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/helpers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareHash\n                        \n                    \n                \n            \n            \n                \ncompareHash(value: string, hash: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashString\n                        \n                    \n                \n            \n            \n                \nhashString(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/auth/api-documentation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoginSwagger\n                        \n                    \n                \n            \n            \n                \nLoginSwagger()\n                \n            \n\n\n\n\n        \n    \n    src/shared/config/env.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(config: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_TodosModule\n\n\n\ncluster_TodosModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTodosModule\n\nTodosModule\n\nAppModule -->\n\nTodosModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nTodosService\n\nTodosService\n\nTodosModule -->\n\nTodosService->TodosModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public-route.decorator.ts)\n                        \n                        \n                            Public   (src/.../public-route.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/public-route.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
